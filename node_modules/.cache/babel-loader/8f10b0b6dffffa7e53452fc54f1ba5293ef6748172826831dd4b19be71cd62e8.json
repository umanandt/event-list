{"ast":null,"code":"var _jsxFileName = \"D:\\\\advance-react-router\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n\n    //  return json({ message: 'Could not fetch events'}, {status: 500 })\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    // we can just return  (return response) we don't\n    // need to anything else\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","$RefreshReg$"],"sources":["D:/advance-react-router/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n  const events = useLoaderData();\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n      status: 500,\r\n    });\r\n\r\n\r\n  //  return json({ message: 'Could not fetch events'}, {status: 500 })\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n    // we can just return  (return response) we don't\r\n    // need to anything else\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGL,aAAa,CAAC,CAAC;EAC9B,oBAAOE,OAAA,CAACH,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACL,EAAA,CAHQD,UAAU;EAAA,QACFH,aAAa;AAAA;AAAAU,EAAA,GADrBP,UAAU;AAKnB,eAAeA,UAAU;AAEzB,OAAO,eAAeQ,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACzEC,MAAM,EAAE;IACV,CAAC,CAAC;;IAGJ;EACA,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACf,MAAM;IACrB;IACA;EACF;AACF;AAAC,IAAAK,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}