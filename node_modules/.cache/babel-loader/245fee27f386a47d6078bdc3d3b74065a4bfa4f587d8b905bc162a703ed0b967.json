{"ast":null,"code":"var _jsxFileName = \"D:\\\\advance-react-router\\\\frontend\\\\src\\\\pages\\\\EventDetails.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport EventItem from \"../components/EventItem\";\nimport { redirect, useRouteLoaderData, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditDetail = () => {\n  _s();\n  //  const data = useRouteLoaderData(\"event-detail\");\n  //   return <EventItem event={data.event} />\n\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"return (\", /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), \");\"]\n  }, void 0, true);\n};\n_s(EditDetail, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EditDetail;\nexport default EditDetail;\nexport async function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"could not fetch details for selected event\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n{\n  /*export async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"could not fetch details for selected event\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n  }*/\n}\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n\n    //  return json({ message: 'Could not fetch events'}, {status: 500 })\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    // we can just return  (return response) we don't\n    // need to anything else\n  }\n}\n\nexport async function loader(_ref) {\n  let {\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"could not fetch details for selected event\"\n    }), {\n      status: 500\n    });\n  } else {\n    return redirect(\"/events\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EditDetail\");","map":{"version":3,"names":["Suspense","EventItem","redirect","useRouteLoaderData","defer","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EditDetail","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loadEvents","loader","_ref","params","eventId","action","_ref2","request","method","$RefreshReg$"],"sources":["D:/advance-react-router/frontend/src/pages/EventDetails.js"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport { redirect, useRouteLoaderData, defer, Await } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nconst EditDetail = () => {\r\n  //  const data = useRouteLoaderData(\"event-detail\");\r\n  //   return <EventItem event={data.event} />\r\n\r\n  const { event, events } = useRouteLoaderData(\"event-detail\");\r\n  <>\r\n    return (\r\n    <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\r\n      <Await resolve={event}>\r\n        {(loadedEvent) => <EventItem event={loadedEvent} />}\r\n      </Await>\r\n    </Suspense>\r\n    <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\r\n      <Await resolve={events}>\r\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\r\n      </Await>\r\n    </Suspense>\r\n    );\r\n  </>;\r\n};\r\n\r\nexport default EditDetail;\r\n\r\nexport async function loadEvent(id) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"could not fetch details for selected event\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\n\r\n{\r\n  /*export async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"could not fetch details for selected event\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}*/\r\n}\r\n\r\n\r\nexport async function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n      status: 500,\r\n    });\r\n\r\n    //  return json({ message: 'Could not fetch events'}, {status: 500 })\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n    // we can just return  (return response) we don't\r\n    // need to anything else\r\n  }\r\n}\r\n\r\nexport async function loader({ params }) {\r\n  const id = params.eventId;\r\n  return defer({\r\n    event: loadEvent(id),\r\n    events: loadEvents(),\r\n  });\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events\" + eventId, {\r\n    method: request.method,\r\n  });\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"could not fetch details for selected event\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return redirect(\"/events\");\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAC7E,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA;;EAEA,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGX,kBAAkB,CAAC,cAAc,CAAC;EAC5D,aAAAK,OAAA,CAAAE,SAAA;IAAAK,QAAA,GAAE,UAEA,eAAAP,OAAA,CAACR,QAAQ;MAACgB,QAAQ,eAAER,OAAA;QAAGS,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAH,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAP,QAAA,eACpEP,OAAA,CAACH,KAAK;QAACkB,OAAO,EAAEV,KAAM;QAAAE,QAAA,EAClBS,WAAW,iBAAKhB,OAAA,CAACP,SAAS;UAACY,KAAK,EAAEW;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACXd,OAAA,CAACR,QAAQ;MAACgB,QAAQ,eAAER,OAAA;QAAGS,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAH,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAP,QAAA,eACpEP,OAAA,CAACH,KAAK;QAACkB,OAAO,EAAET,MAAO;QAAAC,QAAA,EACnBU,YAAY,iBAAKjB,OAAA,CAACF,UAAU;UAACQ,MAAM,EAAEW;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,MAEb;EAAA,eAAE,CAAC;AACL,CAAC;AAACV,EAAA,CAnBID,UAAU;EAAA,QAIYR,kBAAkB;AAAA;AAAAuB,EAAA,GAJxCf,UAAU;AAqBhB,eAAeA,UAAU;AAEzB,OAAO,eAAegB,SAASA,CAACC,EAAE,EAAE;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA6C,CAAC,CAAC,EACzE;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACvB,MAAM;EACvB;AACF;AAGA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXE;AAgBF,OAAO,eAAeyB,UAAUA,CAAA,EAAG;EACjC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACzEC,MAAM,EAAE;IACV,CAAC,CAAC;;IAEF;EACF,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACvB,MAAM;IACrB;IACA;EACF;AACF;;AAEA,OAAO,eAAe0B,MAAMA,CAAAC,IAAA,EAAa;EAAA,IAAZ;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACrC,MAAMb,EAAE,GAAGc,MAAM,CAACC,OAAO;EACzB,OAAOvC,KAAK,CAAC;IACXS,KAAK,EAAEc,SAAS,CAACC,EAAE,CAAC;IACpBd,MAAM,EAAEyB,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeK,MAAMA,CAAAC,KAAA,EAAsB;EAAA,IAArB;IAAEH,MAAM;IAAEI;EAAQ,CAAC,GAAAD,KAAA;EAC9C,MAAMF,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGa,OAAO,EAAE;IACrEI,MAAM,EAAED,OAAO,CAACC;EAClB,CAAC,CAAC;EACF,IAAI,CAAClB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA6C,CAAC,CAAC,EACzE;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOlC,QAAQ,CAAC,SAAS,CAAC;EAC5B;AACF;AAAC,IAAAwB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}