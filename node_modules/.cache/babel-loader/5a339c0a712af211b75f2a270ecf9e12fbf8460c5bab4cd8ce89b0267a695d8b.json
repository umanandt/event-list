{"ast":null,"code":"var _jsxFileName = \"D:\\\\advance-react-router\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useNavigation, useActionData } from \"react-router-dom\";\nimport { Form } from \"react-router-dom\";\nimport { redirect } from 'react-router-dom';\nimport classes from \"./EventForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  // this to use different state useNavigation\n  // to certain thinkgs like show loading\n  // while data is loading\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event && event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event && event.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event && event.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event && event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Submitting...\" : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\n\n// here we gonna use method to perform edit and new event additon by just one action\n// through POST and PATCH method\n// in React router this method has been given to do and FORM componet would\n// help in this\n\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const data = await request.formData();\n  const method = await request.method;\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  let url = \"http://localhost:8080/events\";\n  if (method === \"PATCH\") {\n    const eventId = params.eventId;\n    url = \"http://localhost:8080/events/\" + eventId;\n  }\n  const response = await fetch(url, {\n    method: method,\n    body: JSON.stringify(eventData),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","useNavigation","useActionData","Form","redirect","classes","jsxDEV","_jsxDEV","EventForm","_ref","_s","method","event","data","navigate","navigation","isSubmitting","state","cancelHandler","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","_ref2","request","params","formData","eventData","get","url","eventId","response","fetch","body","JSON","stringify","headers","status","ok","Response","message","$RefreshReg$"],"sources":["D:/advance-react-router/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate, useNavigation, useActionData } from \"react-router-dom\";\nimport { Form } from \"react-router-dom\";\nimport { redirect } from 'react-router-dom';\n\nimport classes from \"./EventForm.module.css\";\n\nfunction EventForm({ method, event }) {\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  // this to use different state useNavigation\n  // to certain thinkgs like show loading\n  // while data is loading\n  const isSubmitting = navigation.state === \"submitting\";\n\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    <Form method={method} className={classes.form}>\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event && event.title}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          required\n          defaultValue={event && event.image}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          required\n          defaultValue={event && event.date}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          required\n          defaultValue={event && event.description}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>\n          {isSubmitting ? \"Submitting...\" : \"Save\"}\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n// here we gonna use method to perform edit and new event additon by just one action\n// through POST and PATCH method\n// in React router this method has been given to do and FORM componet would\n// help in this\n\nexport async function action({ request, params }) {\n  const data = await request.formData();\n  const method = await request.method;\n\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n\n  let url = \"http://localhost:8080/events\";\n\n  if (method === \"PATCH\") {\n    const eventId = params.eventId;\n    url = \"http://localhost:8080/events/\" + eventId;\n  }\n\n  const response = await fetch(url, {\n    method: method,\n    body: JSON.stringify(eventData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  if (response.status === 422) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n      status: 500,\n    });\n  }\n  return redirect(\"/events\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}